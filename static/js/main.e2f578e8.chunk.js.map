{"version":3,"sources":["signup-form/textInput.jsx","signup-form/form.jsx","signup-form/index.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["TextInput","props","className","htmlFor","name","label","error","type","id","placeholder","value","onChange","defaultProps","Form","values","agreement","errors","handleChange","handleAgreement","handleSubmit","onSubmit","email","password","birthDate","gender","checked","disabled","propType","PropType","object","isRequired","bool","func","initValues","SignupForm","state","event","setState","target","preventDefault","validate","isValid","createUser","reset","Object","keys","length","this","React","Component","App","users","user","Date","getTime","toString","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2f578e8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nconst TextInput = props => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={props.name}>{props.label}</label>\r\n            <input \r\n                className={props.error ? 'form-control is-invalid' : 'form-control'}\r\n                type={props.type}\r\n                name={props.name}\r\n                id={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {props.error && <div className=\"invalid-feedback\">{props.error}</div> }\r\n        </div>\r\n    )\r\n}\r\nTextInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\nTextInput.defaultProps = {\r\n    type: 'text',\r\n    label: '',\r\n    placeholder: ''\r\n}\r\nexport default TextInput","import PropType from 'prop-types'\r\nimport React from 'react'\r\nimport TextInput from './textInput'\r\nconst Form = ({values, agreement, errors, handleChange, handleAgreement, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextInput\r\n                name = \"name\"\r\n                type = \"text\"\r\n                label = \"Full Name\"\r\n                placeholder = \"Enter your full name\"\r\n                value = {values.name}\r\n                error = {errors.name}\r\n                onChange = {handleChange}\r\n            />\r\n            <TextInput\r\n                name = \"email\"\r\n                type = \"email\"\r\n                label = \"Email\"\r\n                placeholder = \"Enter your email\"\r\n                value = {values.email}\r\n                error = {errors.email}\r\n                onChange = {handleChange}\r\n            />\r\n            <TextInput\r\n                name = \"password\"\r\n                type = \"password\"\r\n                label = \"Password\"\r\n                placeholder = \"********\"\r\n                value = {values.password}\r\n                error = {errors.password}\r\n                onChange = {handleChange}\r\n            />\r\n            <TextInput\r\n                name = \"birthDate\"\r\n                type = \"date\"\r\n                label = \"Birth Date\"\r\n                placeholder = \"Enter your birth date\"\r\n                value = {values.birthDate}\r\n                error = {errors.birthDate}\r\n                onChange = {handleChange}\r\n            />\r\n            <div className=\"form-group\">\r\n                <label className=\"mr-4\">\r\n                    <input className=\"form-group mr-2\" type=\"radio\" name=\"gender\" value=\"Male\" onChange={handleChange}/>\r\n                    Male\r\n                </label>\r\n                <label className=\"mr-4\">\r\n                    <input className=\"form-group mr-2\" type=\"radio\" name=\"gender\" value=\"Female\" onChange={handleChange}/>\r\n                    Female\r\n                </label>\r\n                {errors.gender && <div className=\"invalid-feedback\"></div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"mr-4\">\r\n                    <input className=\"mr-2\" type=\"checkbox\" name=\"agreement\" checked={agreement} onChange={handleAgreement}/>\r\n                    I agree\r\n                </label>\r\n            </div>\r\n            <button className=\"btn btn-primary\" type=\"submit\" disabled={!agreement}>Sign Up</button>\r\n        </form>\r\n    )\r\n}\r\nForm.propType = {\r\n    values: PropType.object.isRequired,\r\n    agreement: PropType.bool.isRequired,\r\n    errors: PropType.object.isRequired,\r\n    handleChange: PropType.func.isRequired,\r\n    handleAgreement: PropType.func.isRequired,\r\n    handleSubmit: PropType.func.isRequired\r\n}\r\nexport default Form","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport Form from './form'\r\nconst initValues = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    birthDate: '',\r\n    gender: ''\r\n}\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        values: initValues,\r\n        agreement: false,\r\n        errors: {}\r\n    }\r\n    handleChange = event => {\r\n        this.setState({\r\n            values: {\r\n                ...this.state.values,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    handleAgreement = event => {\r\n        this.setState({\r\n            agreement: event.target.checked\r\n        })\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const {isValid, errors} = this.validate()\r\n        if (isValid) {\r\n            this.props.createUser(this.state.values)\r\n            event.target.reset()\r\n            this.setState({values: initValues, agreement: false, errors: {}})\r\n        } else {\r\n            this.setState({errors})\r\n        }\r\n    }\r\n    validate = () => {\r\n        const errors = {}\r\n        const {values: {name, email, password, gender, birthDate}} = this.state\r\n        if(!name){\r\n            errors.name = \"Please provide your name\"\r\n        }\r\n        if (!email) {\r\n            errors.email = \"Please provide your email\"\r\n        }\r\n        if (!password) {\r\n            errors.password = \"please provide your password\"\r\n        }\r\n        if (!birthDate) {\r\n            errors.birthDate = \"Please provide your birth date\"\r\n        }\r\n        if (!gender) {\r\n            errors.gender = \"Please select your gender\"\r\n        }\r\n        return {\r\n            errors,\r\n            isValid: Object.keys(errors).length === 0\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <Form\r\n                values={this.state.values}\r\n                agreement={this.state.agreement}\r\n                errors={this.state.errors}\r\n                handleChange={this.handleChange}\r\n                handleAgreement={this.handleAgreement}\r\n                handleSubmit={this.handleSubmit}\r\n            />\r\n        )\r\n    }\r\n}\r\nSignupForm.propTypes = {\r\n    createUser: PropTypes.func.isRequired\r\n}\r\nexport default SignupForm","import React from 'react'\r\nimport SignupForm from './signup-form/index'\r\nclass App extends React.Component {\r\n    state = {\r\n        users: []\r\n    }\r\n    createUser = user => {\r\n        user.id = new Date().getTime().toString()\r\n        this.setState({\r\n            users: [...this.state.users, user]\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container my-5\">\r\n                <SignupForm createUser={this.createUser} />\r\n                <div className=\"my-4\">\r\n                    <h3>All Registered Users</h3>\r\n                    <ul className=\"my-4\">\r\n                        {\r\n                            this.state.users.map(user => (\r\n                                <li key={user.id} className=\"list-group-item\">\r\n                                    <h4>{user.name}</h4>\r\n                                    <h6>Email : {user.email}</h6>\r\n                                    <h6>Sex : {user.gender}</h6>\r\n                                    <h6>Date of Birth : {user.birthDate}</h6>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}